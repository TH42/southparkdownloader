name: Publish
on:
  workflow_dispatch:
  release:
    types: [published]
    
jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.112'
        
    - name: Build CommandLine
      shell: bash
      run: |
        # Define some variables for things we need
        tag=$(git describe --tags --abbrev=0)
        release_name="SouthParkDLCommandLine-$tag-${{ matrix.target }}"

        # Build everything
        dotnet publish SouthParkDLCommandLine/SouthParkDLCommandLine.csproj --framework netcoreapp3.1 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi

        # Delete output directory
        rm -r "$release_name"
    - name: Build UI
      if: ${{ matrix.kind == 'windows' }}
      shell: bash
      run: |
        # Define some variables for things we need
        tag=$(git describe --tags --abbrev=0)
        release_name="SouthParkDLUI-$tag-${{ matrix.target }}"

        # Build everything
        dotnet publish SouthParkDLUI/SouthParkDLUI.csproj --framework netcoreapp3.1 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi

        # Delete output directory
        rm -r "$release_name"
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "SouthParkDL*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
